var fs = require('fs');

(function() {
	
	module.exports.ReverseRLE = function(encoded) {
		encoded = encoded.split(",");
		var decodedstring = "";
		for (var i = 0; i < encoded.length; i += 2)
		{
			decodedstring += repeat(encoded[i + 1], parseInt(encoded[i]));
		}
		return decodedstring;
	}

	module.exports.repeat = function(s, n)
	{
		var a = [];
		while (a.length < n)
		{
			if (a.length > 0)
				a.push(",");
			a.push(s);
		}
		return a.join('');
	}

	module.exports.LoadMap = function(Filename, Callback)
	{
		var Width,Height,Layers;
		var MapData = "";

		console.log("Loading file.");
		fs.readFile(Filename, function (err, data)
		{
			if (err) throw err;

			var DecodedFile = new Buffer(data, 'binary');
			var DecodedFileString = DecodedFile.toString();

			// Remove and parse header
			var Header = DecodedFileString.substring(0, DecodedFileString.indexOf("B"));
			Width = parseInt(Header.substring(Header.indexOf("W") + 1, Header.indexOf("H")));
			Height = parseInt(Header.substring(Header.indexOf("H") + 1, Header.indexOf("L")));
			Layers = parseInt(Header.substring(Header.indexOf("L") + 1, Header.length));

			// Remove and parse map data by block
			MapData = DecodedFileString.substring(DecodedFileString.indexOf("B") + 1);	
			MapData = MapData.split("B");

			Callback( { W: Width, H: Height, L: Layers, B: MapData } );
			return;
		});
	}

}());
